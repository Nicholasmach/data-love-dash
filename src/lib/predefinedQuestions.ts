export interface PredefinedQuestion {
  id: string
  title: string
  description: string
  explanation: string
  category: 'revenue' | 'leads' | 'conversion' | 'performance' | 'pipeline'
  chartType: 'bar' | 'line' | 'pie' | 'area' | 'composed'
  query: string
  icon: string
}

export const PREDEFINED_QUESTIONS: PredefinedQuestion[] = [
  // Revenue Questions
  {
    id: 'revenue-monthly-trend',
    title: 'Tend√™ncia de Receita Mensal',
    description: 'Evolu√ß√£o da receita nos √∫ltimos 12 meses',
    explanation: 'Gr√°fico mostra a soma da receita mensal de todos os deals ganhos nos √∫ltimos 12 meses, agrupados por m√™s de cria√ß√£o',
    category: 'revenue',
    chartType: 'line',
    query: `
      SELECT 
        DATE_TRUNC('month', deal_created_at) as month,
        SUM(deal_amount_total) as revenue
      FROM deals_normalized 
      WHERE deal_created_at >= NOW() - INTERVAL '12 months'
      AND win = true
      GROUP BY month
      ORDER BY month
    `,
    icon: 'üí∞'
  },
  {
    id: 'revenue-by-source',
    title: 'Receita por Fonte de Lead',
    description: 'Distribui√ß√£o da receita por origem dos leads',
    explanation: 'Gr√°fico de pizza mostra a receita total por fonte de leads apenas para deals ganhos, ordenado por maior receita',
    category: 'revenue',
    chartType: 'pie',
    query: `
      SELECT 
        deal_source_name as source,
        SUM(deal_amount_total) as revenue
      FROM deals_normalized 
      WHERE win = true
      AND deal_source_name IS NOT NULL
      GROUP BY deal_source_name
      ORDER BY revenue DESC
    `,
    icon: 'üéØ'
  },
  {
    id: 'revenue-by-campaign',
    title: 'Receita por Campanha',
    description: 'Performance de receita por campanha de marketing',
    explanation: 'Gr√°fico de barras mostra receita total e quantidade de deals ganhos por campanha de marketing, limitado √†s 10 campanhas com maior receita',
    category: 'revenue',
    chartType: 'bar',
    query: `
      SELECT 
        campaign_name,
        SUM(deal_amount_total) as revenue,
        COUNT(*) as deals_count
      FROM deals_normalized 
      WHERE win = true
      AND campaign_name IS NOT NULL
      GROUP BY campaign_name
      ORDER BY revenue DESC
      LIMIT 10
    `,
    icon: 'üìà'
  },

  // Lead Questions
  {
    id: 'leads-monthly-generation',
    title: 'Gera√ß√£o de Leads Mensal',
    description: 'N√∫mero de leads gerados por m√™s',
    explanation: 'Gr√°fico de barras mostra a contagem total de deals criados por m√™s nos √∫ltimos 12 meses, independente do status',
    category: 'leads',
    chartType: 'bar',
    query: `
      SELECT 
        DATE_TRUNC('month', deal_created_at) as month,
        COUNT(*) as leads_count
      FROM deals_normalized 
      WHERE deal_created_at >= NOW() - INTERVAL '12 months'
      GROUP BY month
      ORDER BY month
    `,
    icon: 'üé™'
  },
  {
    id: 'leads-by-source',
    title: 'Leads por Fonte',
    description: 'Distribui√ß√£o de leads por origem',
    explanation: 'Gr√°fico de pizza mostra a distribui√ß√£o de todos os leads por fonte de origem, ordenado pela maior quantidade',
    category: 'leads',
    chartType: 'pie',
    query: `
      SELECT 
        deal_source_name as source,
        COUNT(*) as leads_count
      FROM deals_normalized 
      WHERE deal_source_name IS NOT NULL
      GROUP BY deal_source_name
      ORDER BY leads_count DESC
    `,
    icon: 'üîç'
  },
  {
    id: 'leads-by-stage',
    title: 'Leads por Est√°gio',
    description: 'Distribui√ß√£o atual de leads por est√°gio do funil',
    explanation: 'Gr√°fico de barras mostra a quantidade atual de deals em cada est√°gio do funil de vendas, ordenado pela maior quantidade',
    category: 'leads',
    chartType: 'bar',
    query: `
      SELECT 
        deal_stage_name as stage,
        COUNT(*) as leads_count
      FROM deals_normalized 
      WHERE deal_stage_name IS NOT NULL
      GROUP BY deal_stage_name
      ORDER BY leads_count DESC
    `,
    icon: 'üèóÔ∏è'
  },

  // Conversion Questions
  {
    id: 'conversion-rate-monthly',
    title: 'Taxa de Convers√£o Mensal',
    description: 'Evolu√ß√£o da taxa de convers√£o ao longo do tempo',
    explanation: 'Gr√°fico de linha mostra a evolu√ß√£o da taxa de convers√£o mensal (deals ganhos / total de deals) nos √∫ltimos 12 meses',
    category: 'conversion',
    chartType: 'line',
    query: `
      SELECT 
        DATE_TRUNC('month', deal_created_at) as month,
        COUNT(*) as total_leads,
        COUNT(*) FILTER (WHERE win = true) as won_deals,
        ROUND((COUNT(*) FILTER (WHERE win = true)::float / COUNT(*)) * 100, 2) as conversion_rate
      FROM deals_normalized 
      WHERE deal_created_at >= NOW() - INTERVAL '12 months'
      GROUP BY month
      ORDER BY month
    `,
    icon: 'üîÑ'
  },
  {
    id: 'conversion-by-source',
    title: 'Convers√£o por Fonte',
    description: 'Taxa de convers√£o por origem dos leads',
    explanation: 'Gr√°fico de barras mostra a taxa de convers√£o por fonte de leads (apenas fontes com 5+ leads), ordenado pela maior taxa',
    category: 'conversion',
    chartType: 'bar',
    query: `
      SELECT 
        deal_source_name as source,
        COUNT(*) as total_leads,
        COUNT(*) FILTER (WHERE win = true) as won_deals,
        ROUND((COUNT(*) FILTER (WHERE win = true)::float / COUNT(*)) * 100, 2) as conversion_rate
      FROM deals_normalized 
      WHERE deal_source_name IS NOT NULL
      GROUP BY deal_source_name
      HAVING COUNT(*) >= 5
      ORDER BY conversion_rate DESC
    `,
    icon: 'üéØ'
  },
  {
    id: 'conversion-by-campaign',
    title: 'Convers√£o por Campanha',
    description: 'Taxa de convers√£o por campanha de marketing',
    explanation: 'Gr√°fico de barras mostra a taxa de convers√£o das 10 campanhas com melhor performance (m√≠nimo 3 leads por campanha)',
    category: 'conversion',
    chartType: 'bar',
    query: `
      SELECT 
        campaign_name,
        COUNT(*) as total_leads,
        COUNT(*) FILTER (WHERE win = true) as won_deals,
        ROUND((COUNT(*) FILTER (WHERE win = true)::float / COUNT(*)) * 100, 2) as conversion_rate
      FROM deals_normalized 
      WHERE campaign_name IS NOT NULL
      GROUP BY campaign_name
      HAVING COUNT(*) >= 3
      ORDER BY conversion_rate DESC
      LIMIT 10
    `,
    icon: 'üìä'
  },

  // Performance Questions
  {
    id: 'performance-by-rep',
    title: 'Performance por Vendedor',
    description: 'Receita e n√∫mero de vendas por representante',
    explanation: 'Gr√°fico de barras mostra receita total e deals ganhos por vendedor nos √∫ltimos 6 meses, ordenado pela maior receita',
    category: 'performance',
    chartType: 'bar',
    query: `
      SELECT 
        user_name as sales_rep,
        SUM(deal_amount_total) as total_revenue,
        COUNT(*) FILTER (WHERE win = true) as deals_won
      FROM deals_normalized 
      WHERE user_name IS NOT NULL
      AND deal_created_at >= NOW() - INTERVAL '6 months'
      GROUP BY user_name
      ORDER BY total_revenue DESC
      LIMIT 10
    `,
    icon: 'üë•'
  },
  {
    id: 'performance-avg-deal-size',
    title: 'Ticket M√©dio por Per√≠odo',
    description: 'Evolu√ß√£o do ticket m√©dio das vendas',
    explanation: 'Gr√°fico de linha mostra a evolu√ß√£o do valor m√©dio dos deals ganhos por m√™s nos √∫ltimos 12 meses',
    category: 'performance',
    chartType: 'line',
    query: `
      SELECT 
        DATE_TRUNC('month', deal_created_at) as month,
        ROUND(AVG(deal_amount_total), 2) as avg_deal_size,
        COUNT(*) as deals_count
      FROM deals_normalized 
      WHERE win = true
      AND deal_created_at >= NOW() - INTERVAL '12 months'
      GROUP BY month
      ORDER BY month
    `,
    icon: 'üíé'
  },
  {
    id: 'performance-interactions',
    title: 'Intera√ß√µes vs Convers√£o',
    description: 'Rela√ß√£o entre n√∫mero de intera√ß√µes e taxa de convers√£o',
    explanation: 'Gr√°fico de √°rea mostra como a taxa de convers√£o varia conforme o n√∫mero de intera√ß√µes realizadas com o lead',
    category: 'performance',
    chartType: 'area',
    query: `
      SELECT 
        CASE 
          WHEN interactions <= 2 THEN '1-2 intera√ß√µes'
          WHEN interactions <= 5 THEN '3-5 intera√ß√µes'
          WHEN interactions <= 10 THEN '6-10 intera√ß√µes'
          ELSE '10+ intera√ß√µes'
        END as interaction_range,
        COUNT(*) as total_deals,
        COUNT(*) FILTER (WHERE win = true) as won_deals,
        ROUND((COUNT(*) FILTER (WHERE win = true)::float / COUNT(*)) * 100, 2) as conversion_rate
      FROM deals_normalized 
      WHERE interactions > 0
      GROUP BY interaction_range
      ORDER BY MIN(interactions)
    `,
    icon: 'üí¨'
  },

  // Pipeline Questions
  {
    id: 'pipeline-value-stage',
    title: 'Valor do Pipeline por Est√°gio',
    description: 'Distribui√ß√£o de valor do pipeline atual por est√°gio',
    explanation: 'Gr√°fico de barras mostra o valor total e quantidade de deals ativos (n√£o ganhos e n√£o em hold) por est√°gio do pipeline',
    category: 'pipeline',
    chartType: 'bar',
    query: `
      SELECT 
        deal_stage_name as stage,
        SUM(deal_amount_total) as pipeline_value,
        COUNT(*) as deals_count
      FROM deals_normalized 
      WHERE win = false 
      AND hold = false
      AND deal_stage_name IS NOT NULL
      GROUP BY deal_stage_name
      ORDER BY pipeline_value DESC
    `,
    icon: 'üîÆ'
  },
  {
    id: 'pipeline-forecast',
    title: 'Previs√£o de Fechamento',
    description: 'Deals com potencial de fechamento nos pr√≥ximos 30 dias',
    explanation: 'Gr√°fico de barras mostra deals ativos com atividade recente (√∫ltimos 30 dias) que t√™m potencial de fechamento em breve',
    category: 'pipeline',
    chartType: 'bar',
    query: `
      SELECT 
        deal_stage_name as stage,
        COUNT(*) as deals_count,
        SUM(deal_amount_total) as potential_revenue
      FROM deals_normalized 
      WHERE win = false 
      AND hold = false
      AND last_activity_at >= NOW() - INTERVAL '30 days'
      AND deal_stage_name IS NOT NULL
      GROUP BY deal_stage_name
      ORDER BY potential_revenue DESC
    `,
    icon: 'üìÖ'
  }
]

export const getQuestionsByCategory = (category: PredefinedQuestion['category']) => {
  return PREDEFINED_QUESTIONS.filter(q => q.category === category)
}

export const getQuestionById = (id: string) => {
  return PREDEFINED_QUESTIONS.find(q => q.id === id)
}